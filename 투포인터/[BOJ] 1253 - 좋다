package study.algorithmwrite;

import java.io.*;
import java.util.Arrays;
import java.util.StringTokenizer;


public class Main {
    static long[] arr;

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());
        int good = 0;
        int N = Integer.parseInt(st.nextToken());
        long k;
        arr = new long[N];
        st = new StringTokenizer(br.readLine());
        for(int i=0; i<N; i++)
            arr[i] = Long.parseLong(st.nextToken());

        Arrays.sort(arr); // 정렬

        int start, end;
        for(int i=0; i<N; i++){ // good을 찾는 과정 - 투 포인터 사용 / 2개 수 합을 나타내야하므로 index 0, 1은 무시
            k = arr[i];
            start = 0;
            end = N-1;

            while(start < end) {
                long sum = arr[start] + arr[end];
                if (sum == k){
                    if(start != i && end != i) {
                        good++;
                        break;
                    }
                    else if (start == i)
                        start++;
                    else
                        end--;
                }else if(sum < k){
                    start++;
                }else{
                    end--;
                }
            }
        }
        System.out.println(good);
        br.close();
    }
}
